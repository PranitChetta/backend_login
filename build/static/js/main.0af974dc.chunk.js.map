{"version":3,"sources":["stores/UserStores.js","InputField.js","submitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","state","className","Input","type","props","placeholder","value","onChange","e","target","Component","SubmitButton","Button","disabled","onClick","text","LoginForm","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","Accept","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","hearders","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0af974dc.chunk.js","sourcesContent":["//import React, { Component } from \"react\";\r\nimport { extendObservable } from \"mobx\";\r\n\r\n/**\r\n * User Store\r\n */\r\nclass UserStore {\r\n  constructor() {\r\n    extendObservable(this, {\r\n      loading: true,\r\n      isLoggedIn: false,\r\n      username: \"\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default new UserStore();\r\n","//import React from \"react\";\r\nimport React, { Component } from \"react\";\r\nimport { Input } from \"@material-ui/core\";\r\n\r\nclass InputField extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"inputField\">\r\n        <Input\r\n          className=\"txt-email\"\r\n          type={this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          value={this.props.value}\r\n          onChange={(e) => this.props.onChange(e.target.value)}\r\n        ></Input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nclass SubmitButton extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"submitButton\">\r\n        <Button\r\n          className=\"btn btn-primary\"\r\n          disabled={this.props.disabled}\r\n          onClick={() => this.props.onClick()}\r\n        >\r\n          {this.props.text}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React, { Component } from \"react\";\r\nimport InputFeild from \"./InputField\";\r\nimport SubmitButton from \"./submitButton\";\r\nimport UserStore from \"./stores/UserStores\";\r\n\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      buttonDisabled: false,\r\n    };\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if (val.length > 18) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val,\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username: \"\",\r\n      password: \"\",\r\n      buttonDisabled: false,\r\n    });\r\n  }\r\n\r\n  async doLogin() {\r\n    if (!this.props.username) {\r\n      return;\r\n    }\r\n    if (!this.props.password) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      buttonDisabled: true,\r\n    });\r\n\r\n    try {\r\n      let res = await fetch(\"/login\", {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n        }),\r\n      });\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      } else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginform\">\r\n        <h1>Login</h1>\r\n        <InputFeild\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={this.state.username ? this.state.username : \"\"}\r\n          onChange={(val) => this.setInputValue(\"username\", val)}\r\n        ></InputFeild>\r\n\r\n        <InputFeild\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={this.state.password ? this.state.password : \"\"}\r\n          onChange={(val) => this.setInputValue(\"password\", val)}\r\n        ></InputFeild>\r\n\r\n        <SubmitButton\r\n          text=\"Login\"\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={() => this.doLogin()}\r\n        ></SubmitButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { render } from \"@testing-library/react\";\nimport UserStore from \"./stores/UserStores\";\nimport LoginForm from \"./LoginForm\";\nimport SubmitButton from \"./submitButton\";\n//import { Button } from \"@material-ui/core\";\n\nclass App extends Component {\n  // constructor() {\n  //   super();\n  //   this.state = {};\n  // }\n\n  async componentDidMount() {\n    try {\n      let res = await fetch(\"/isLoggedIn\", {\n        method: \"post\",\n        hearders: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch(\"/logout\", {\n        method: \"post\",\n        hearders: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = \"\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    if (UserStore.loading) {\n      return (\n        <div className=\"App\">\n          <div className=\"container\">Loading, please wait.....</div>\n          Login with React\n        </div>\n      );\n    } else {\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"App\">\n            <div className=\"container\">\n              Welcome {UserStore.username}\n              <SubmitButton\n                text={\"Log out\"}\n                disabled={false}\n                onClick={() => this.doLogout()}\n              ></SubmitButton>\n            </div>\n            Login with React\n          </div>\n        );\n      }\n      return (\n        <div className=\"container-fluid\">\n          <LoginForm></LoginForm>\n        </div>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}